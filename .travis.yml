# integrate Coverity
env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "W/AGSYXP8DVdAP5ngV6s+lcTGyIax4P+FuGesSq8ogHXKMWu3KSC8AO0mTRoe3cW4mo6wFcv4n2CaQp72qP9Npw3BFkraSmxa7WplD6dlGdhyiwLcodw6S4Rl4fgw9ydPIWlA5zzaSRz/G/okWDXlAMaNnt/EGX3KNqNJG3b4dKdkDc7nqRZuUWUqQZL0mlsJaox9zDl/JJ0Eulr6l4zQcbXkcfhIGb9jmMSRLqfWCV1SrqBbCvocpBSTentlbEYK+Z0KIGDsV2ZkdFwLBqZ+OPYziRTeN2nIQlkRhze/xt1ggapgI2MPDbXbj+JSoMKNCXphxDn12ZmhLkJo+2sHzmUacu/a+0yavxh8IpC0JdHOCVt8wm9Oa9/e6ApVbqjt17GOxbiHDopdbpKbWa34/rUh6SXmrZzIQp4XErYy+Z+hDfcXgqlSB7LbGgA4dZt/qbq5v/yGdpvnjWklff43uEPtqBnBmYOzKFmvvq3jq9BUKiW/oPcay6NnTRqb0EW7crFBr/wiO19b7OEFrieTJgcPpzc+CBfnzLw5//ct+lBrKypQjxYlf+tUV/a5MjbrVEWFG+1qEdWAzLRMgWxkSMUduxFnBo8yIGyebKeGxqodHZ+HMMnAZOAz7KxAkON3GnwlBtL22bulRP85DVCE1rgGPnuHCazw3LFxJH17As="

before_install:
  - eval "${MATRIX_EVAL}"
  - which gpg
  - which gnupg
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update          ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew upgrade ruby brew ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew upgrade         ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then which gpg || brew install gpg ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then which llvm-cov || brew install --with-toolchain llvm ; brew info llvm ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew --env           ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew doctor          ; fi
  - curl -sSL https://rvm.io/mpapis.asc | gpg --import - && rvm get head
  - if [[ ! "$TRAVIS_OS_NAME" == "osx" ]]; then echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-certificates.crt ; fi
  #- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install graphviz; fi
  #- sudo apt-get install libuv1
  # Install lcov 1.11
  - wget http://downloads.sourceforge.net/ltp/lcov-1.13.tar.gz
  - tar -xvf lcov-1.13.tar.gz
  - cd lcov-1.13 && make && sudo make install
  - cd ..
  - lcov --version

install:
  - git clone https://github.com/$TRAVIS_REPO_SLUG.git $TRAVIS_REPO_SLUG
  - cd $TRAVIS_REPO_SLUG
  - git checkout -qf $TRAVIS_COMMIT
  - git clone --depth=1 https://github.com/yhfudev/cpp-ci-unit-test.git
  - git clone --depth=1 --branch v1.19.2 https://github.com/libuv/libuv.git
  - cd libuv && ./autogen.sh && ./configure --enable-static --disable-shared && make clean && make -j8 && sudo make install && cd ..

addons:
  coverity_scan:
    project:
      name: $TRAVIS_REPO_SLUG
      version: $TRAVIS_COMMIT
      description: "Build submitted via Travis CI"
    notification_email: yhfudev@gmail.com
    build_command_prepend: "./autogen.sh"
    build_command:   make -k
    branch_pattern: coverity_scan
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gcc
    - g++

sudo: required
language: c
os:
  - linux
  - osx
compiler:
  - clang
  - gcc

matrix:
  include:
    ### GCC on Linux
    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env:
         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    ### Clang
    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env:
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      env:
        - MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"

    # works on Trusty
# clang-3.9 have problem in coverage: "unrecognized relocation (0x2a) in section `.text.llvm_gcda_start_file'"
#    - os: linux
#      addons:
#        apt:
#          sources:
#            - llvm-toolchain-trusty-3.9
#          packages:
#            - clang-3.9
#      env:
#        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

    ### GCC on OS X
    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc5 && CC=gcc-5 && CXX=g++-5"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc6 && CC=gcc-6 && CXX=g++-6"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc && CC=gcc-7 && CXX=g++-7"


script:
  - if [[ ! "$TRAVIS_OS_NAME" == "osx" ]]; then if [ -x /usr/bin/gcc-5 ]; then sudo unlink /usr/bin/gcc && sudo ln -s /usr/bin/gcc-5 /usr/bin/gcc; fi; fi
  - if [[ ! "$TRAVIS_OS_NAME" == "osx" ]]; then if [ -x /usr/bin/g++-5 ]; then sudo unlink /usr/bin/g++ && sudo ln -s /usr/bin/g++-5 /usr/bin/g++; fi; fi
  - gcc --version
  - g++ --version
  - echo "CC=$CC; CXX=$CXX"
  - ./autogen.sh && CC=${CC} CXX=${CXX} ./configure --enable-static --disable-shared --enable-coverage --with-libuv-include=`pwd`/libuv/include --with-libuv-lib=`pwd`/libuv/ --with-ciut=`pwd`/cpp-ci-unit-test CPPFLAGS=-I${TRAVIS_BUILD_DIR} && make -j 8 CC=${CC} CXX=${CXX} && sudo make install CC=${CC} CXX=${CXX} && make check CC=${CC} CXX=${CXX} && make clean && make coverage CC=${CC} CXX=${CXX} && utils/ciutexc -


after_success:
  - bash <(curl -s https://codecov.io/bash)

